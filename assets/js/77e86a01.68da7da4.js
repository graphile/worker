"use strict";(self.webpackChunkgraphile_worker=self.webpackChunkgraphile_worker||[]).push([[1856],{9916:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>y});var n=t(3696);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),u=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=u(e.components);return n.createElement(s.Provider,{value:r},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,y=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return t?n.createElement(y,l(l({ref:r},c),{},{components:t})):n.createElement(y,l({ref:r},c))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=m;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2491:(e,r,t)=>{t.d(r,{A:()=>l});var n=t(3696),a=t(2162);const o={tabItem:"tabItem_wHwb"};function l(e){let{children:r,hidden:t,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.A)(o.tabItem,l),hidden:t},r)}},8296:(e,r,t)=>{t.d(r,{A:()=>k});var n=t(8102),a=t(3696),o=t(2162),l=t(766),i=t(9519),s=t(5043),u=t(4544),c=t(8708);function d(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:r,label:t,attributes:n,default:a}}=e;return{value:r,label:t,attributes:n,default:a}}))}function p(e){const{values:r,children:t}=e;return(0,a.useMemo)((()=>{const e=r??d(t);return function(e){const r=(0,u.X)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function m(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function y(e){let{queryString:r=!1,groupId:t}=e;const n=(0,i.W6)(),o=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,s.aZ)(o),(0,a.useCallback)((e=>{if(!o)return;const r=new URLSearchParams(n.location.search);r.set(o,e),n.replace({...n.location,search:r.toString()})}),[o,n])]}function b(e){const{defaultValue:r,queryString:t=!1,groupId:n}=e,o=p(e),[l,i]=(0,a.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!m({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:o}))),[s,u]=y({queryString:t,groupId:n}),[d,b]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[n,o]=(0,c.Dv)(t);return[n,(0,a.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:n}),h=(()=>{const e=s??d;return m({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,o]),tabValues:o}}var h=t(6681);const g={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};function f(e){let{className:r,block:t,selectedValue:i,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.a_)(),p=e=>{const r=e.currentTarget,t=c.indexOf(r),n=u[t].value;n!==i&&(d(r),s(n))},m=e=>{let r=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;r=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;r=c[t]??c[c.length-1];break}}r?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},r)},u.map((e=>{let{value:r,label:t,attributes:l}=e;return a.createElement("li",(0,n.A)({role:"tab",tabIndex:i===r?0:-1,"aria-selected":i===r,key:r,ref:e=>c.push(e),onKeyDown:m,onClick:p},l,{className:(0,o.A)("tabs__item",g.tabItem,l?.className,{"tabs__item--active":i===r})}),t??r)})))}function v(e){let{lazy:r,children:t,selectedValue:n}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=o.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,r)=>(0,a.cloneElement)(e,{key:r,hidden:e.props.value!==n}))))}function w(e){const r=b(e);return a.createElement("div",{className:(0,o.A)("tabs-container",g.tabList)},a.createElement(f,(0,n.A)({},e,r)),a.createElement(v,(0,n.A)({},e,r)))}function k(e){const r=(0,h.A)();return a.createElement(w,(0,n.A)({key:String(r)},e))}},5108:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var n=t(8102),a=(t(3696),t(9916)),o=t(8296),l=t(2491);const i={title:"Library",sidebar_position:60},s=void 0,u={unversionedId:"library/index",id:"library/index",title:"Library",description:"There are two main ways to run Graphile Worker: CLI mode and library mode.",source:"@site/docs/library/index.md",sourceDirName:"library",slug:"/library/",permalink:"/docs/library/",draft:!1,editUrl:"https://github.com/graphile/worker/tree/main/website/docs/library/index.md",tags:[],version:"current",sidebarPosition:60,frontMatter:{title:"Library",sidebar_position:60},sidebar:"tutorialSidebar",previous:{title:"Running jobs",permalink:"/docs/cli/run"},next:{title:"Running jobs",permalink:"/docs/library/run"}},c={},d=[{value:"Quickstart",id:"quickstart",level:2},{value:"Add the worker to your project:",id:"add-the-worker-to-your-project",level:3},{value:"Run the worker",id:"run-the-worker",level:3},{value:"Add a job via the library",id:"add-a-job-via-the-library",level:3},{value:"Success!",id:"success",level:3}],p={toc:d},m="wrapper";function y(e){let{components:r,...t}=e;return(0,a.yg)(m,(0,n.A)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"There are two main ways to run Graphile Worker: CLI mode and library mode.\nLibrary mode trades some convenience for power, giving you more options as to\nhow you configure the worker."),(0,a.yg)("p",null,"We recommend ",(0,a.yg)("a",{parentName:"p",href:"/docs/cli"},"CLI mode")," for most users."),(0,a.yg)("h2",{id:"quickstart"},"Quickstart"),(0,a.yg)("p",null,"Instead of running ",(0,a.yg)("inlineCode",{parentName:"p"},"graphile-worker")," ",(0,a.yg)("a",{parentName:"p",href:"/docs/cli"},"via the CLI"),", you may use it\ndirectly in your Node.js code."),(0,a.yg)("h3",{id:"add-the-worker-to-your-project"},"Add the worker to your project:"),(0,a.yg)(o.A,{groupId:"npm2yarn",mdxType:"Tabs"},(0,a.yg)(l.A,{value:"npm",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"npm install --save graphile-worker\n"))),(0,a.yg)(l.A,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"yarn add graphile-worker\n"))),(0,a.yg)(l.A,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"pnpm add graphile-worker\n")))),(0,a.yg)("h3",{id:"run-the-worker"},"Run the worker"),(0,a.yg)("p",null,"The following is equivalent to the setup in\n",(0,a.yg)("a",{parentName:"p",href:"/docs/cli#quickstart"},"the CLI quickstart"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const { run } = require("graphile-worker");\n\nasync function main() {\n  // Run a worker to execute jobs:\n  const runner = await run({\n    connectionString: "postgres:///my_db",\n    concurrency: 5,\n    // Install signal handlers for graceful shutdown on SIGINT, SIGTERM, etc\n    noHandleSignals: false,\n    pollInterval: 1000,\n    // you can set the taskList or taskDirectory but not both\n    taskList: {\n      hello: async (payload, helpers) => {\n        const { name } = payload;\n        helpers.logger.info(`Hello, ${name}`);\n      },\n    },\n    // or:\n    //   taskDirectory: `${__dirname}/tasks`,\n  });\n\n  // Immediately await (or otherwise handle) the resulting promise, to avoid\n  // "unhandled rejection" errors causing a process crash in the event of\n  // something going wrong.\n  await runner.promise;\n\n  // If the worker exits (whether through fatal error or otherwise), the above\n  // promise will resolve/reject.\n}\n\nmain().catch((err) => {\n  console.error(err);\n  process.exit(1);\n});\n')),(0,a.yg)("h3",{id:"add-a-job-via-the-library"},"Add a job via the library"),(0,a.yg)("p",null,"You can also use the library to quickly add a job:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const { addJobAdhoc } = require("graphile-worker");\n\naddJobAdhoc(\n  // makeWorkerUtils options\n  { connectionString: "postgres:///my_db" },\n\n  // Task identifier\n  "hello",\n\n  // Payload\n  { name: "Bobby Tables" },\n).catch((err) => {\n  console.error(err);\n  process.exit(1);\n});\n')),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"Though ",(0,a.yg)("inlineCode",{parentName:"p"},"addJobAdhoc")," is a quick and easy way for you to add a one-off job, it is\nnot the recommended to use it in your main application due to inefficiency. It's\nfine for one-off scripts like this, but in your main application you should use\n",(0,a.yg)("a",{parentName:"p",href:"/docs/library/queue#workerutils"},"WorkerUtils"),"'"," ",(0,a.yg)("inlineCode",{parentName:"p"},"addJob")," method..")),(0,a.yg)("h3",{id:"success"},"Success!"),(0,a.yg)("p",null,"Running these two examples should output something like:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"[core] INFO: Worker connected and looking for jobs... (task names: 'hello')\n[job(worker-7327280603017288: hello{1})] INFO: Hello, Bobby Tables\n[worker(worker-7327280603017288)] INFO: Completed task 1 (hello) with success (0.16ms)\n")))}y.isMDXComponent=!0}}]);