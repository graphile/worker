"use strict";(self.webpackChunkgraphile_worker=self.webpackChunkgraphile_worker||[]).push([[8070],{9916:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>f});var o=n(3696);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),h=r,f=p["".concat(s,".").concat(h)]||p[h]||d[h]||a;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1316:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var o=n(8102),r=(n(3696),n(9916));const a={title:"FAQ"},i=void 0,l={unversionedId:"faq",id:"faq",title:"FAQ",description:"Got a question?",source:"@site/docs/faq.md",sourceDirName:".",slug:"/faq",permalink:"/docs/faq",draft:!1,editUrl:"https://github.com/graphile/worker/tree/main/website/docs/faq.md",tags:[],version:"current",frontMatter:{title:"FAQ"},sidebar:"tutorialSidebar",previous:{title:"Uninstall/Reset",permalink:"/docs/uninstall"},next:{title:"Glossary",permalink:"/docs/glossary"}},s={},u=[{value:"Is LISTEN/NOTIFY used by default, and will this pose a problem for pgBouncer?",id:"is-listennotify-used-by-default-and-will-this-pose-a-problem-for-pgbouncer",level:2},{value:"If we have jobs that are scheduled in the future/failed will workers continuously poll to run those jobs, or will the LISTEN/NOTIFY mechanism be used for that?",id:"if-we-have-jobs-that-are-scheduled-in-the-futurefailed-will-workers-continuously-poll-to-run-those-jobs-or-will-the-listennotify-mechanism-be-used-for-that",level:2},{value:"Does each concurrent worker poll the db, or does each instance poll the db and then distribute the jobs to concurrent workers?",id:"does-each-concurrent-worker-poll-the-db-or-does-each-instance-poll-the-db-and-then-distribute-the-jobs-to-concurrent-workers",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,o.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Got a question?\n",(0,r.yg)("a",{parentName:"p",href:"https://github.com/graphile/worker/issues/new?assignees=&labels=%E2%9D%94+question&projects=&template=ask_a_question.md"},"Submit an issue"),"\nand maybe it'll end up on this page!"),(0,r.yg)("h2",{id:"is-listennotify-used-by-default-and-will-this-pose-a-problem-for-pgbouncer"},"Is LISTEN/NOTIFY used by default, and will this pose a problem for pgBouncer?"),(0,r.yg)("p",null,"Yes, it's on by default. Yes, pgbouncer ",(0,r.yg)("em",{parentName:"p"},"might")," pose an issue if it's not done\nin \"connection\" mode. We could probably disable it and do polling only (but we\ndon't currently have an option for that), or we could use a separate connection\nstring for the polling (but, again, we don't currently have an option for that\nIIRC). The issue would be that the events won't necessarily be received, and too\nmany connections will be in the ",(0,r.yg)("inlineCode",{parentName:"p"},"LISTEN")," state (potentially). Or none... Really\ndepends on the setup."),(0,r.yg)("p",null,"If you'd like to sponsor improvements in Graphile Worker to accommodate\npgBouncer better, please get in touch!"),(0,r.yg)("h2",{id:"if-we-have-jobs-that-are-scheduled-in-the-futurefailed-will-workers-continuously-poll-to-run-those-jobs-or-will-the-listennotify-mechanism-be-used-for-that"},"If we have jobs that are scheduled in the future/failed will workers continuously poll to run those jobs, or will the LISTEN/NOTIFY mechanism be used for that?"),(0,r.yg)("p",null,"We use polling for this. We cannot use ",(0,r.yg)("inlineCode",{parentName:"p"},"LISTEN"),"/",(0,r.yg)("inlineCode",{parentName:"p"},"NOTIFY"),' since there\'s nothing\nto generate an event when the time "ticks over".'),(0,r.yg)("p",null,"You can change the poll frequency depending on how accurate you need these to\nbe; it defaults to 2 seconds, but 30 or even 60 seconds is probably fine if\nyou're having performance issues. That said; we always request a new job when\nthe previous job finishes anyway, so if you're scaled enough that your worker is\nalways at full capacity then the poll frequency (and ",(0,r.yg)("inlineCode",{parentName:"p"},"LISTEN"),"/",(0,r.yg)("inlineCode",{parentName:"p"},"NOTIFY"),") are kind\nof irrelevant."),(0,r.yg)("h2",{id:"does-each-concurrent-worker-poll-the-db-or-does-each-instance-poll-the-db-and-then-distribute-the-jobs-to-concurrent-workers"},"Does each concurrent worker poll the db, or does each instance poll the db and then distribute the jobs to concurrent workers?"),(0,r.yg)("p",null,"Each concurrent worker will ask for a job as soon as the previous job finishes.\nEach instance will ",(0,r.yg)("inlineCode",{parentName:"p"},"LISTEN")," for events and when it receives one it will pick an\nidle worker to ask for jobs. If there is no idle worker then it'll drop the\nevent knowing that when one of the workers finishes they'll ask for the next job\nanyway."))}d.isMDXComponent=!0}}]);