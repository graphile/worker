name: CI

on: [push, pull_request]

env:
  CI: true
  PGUSER: postgres
  PGPASSWORD: postgres
  PGHOST: "127.0.0.1"
  PGPORT: 5432

jobs:
  test:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [10.x, 12.x]
        postgres-version: [9.6, 10, 11, 12]

    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: graphile_worker_test
        ports:
          - "0.0.0.0:5432:5432"
        # needed because the postgres container does not provide a healthcheck
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn --frozen-lockfile
      - run: yarn lint
      - run: yarn jest -i --ci

  altschema:
    runs-on: ubuntu-18.04
    env:
      GRAPHILE_WORKER_SCHEMA: custom_schema

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: graphile_worker_test
        ports:
          - "0.0.0.0:5432:5432"
        # needed because the postgres container does not provide a healthcheck
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: yarn --frozen-lockfile
      - run: yarn lint
      - run: yarn jest -i --ci
